#pragma omp parallel for private(c2,c4,c3)
    for (c1 = 0; c1 <= (((nk + -1) * 16 < 0 ? ((16 < 0 ? -((-(nk + -1) + 16 + 1) / 16) : -((-(nk + -1) + 16 - 1) / 16))) : (nk + -1) / 16)); c1++) {
        for (c2 = 0; c2 <= (((nj + -1) * 16 < 0 ? ((16 < 0 ? -((-(nj + -1) + 16 + 1) / 16) : -((-(nj + -1) + 16 - 1) / 16))) : (nj + -1) / 16)); c2++) {
            for (c3 = 16 * c1; c3 <= ((16 * c1 + 15 < nk + -1 ? 16 * c1 + 15 : nk + -1)); c3++) {
                #pragma omp simd
                    for (c4 = 16 * c2; c4 <= ((16 * c2 + 15 < nj + -1 ? 16 * c2 + 15 : nj + -1)); c4++) {
                        B[c3][c4] = ((double)c3) * (c4 + 1) / nj;
                    }
            }
        }
    }
